// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace PersonalPortfolio.Shared.Storage.Sqlite.Migrations
{
    [DbContext(typeof(PortfolioDbContext))]
    partial class PortfolioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("PersonalPortfolio.Shared.Storage.Security", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Securities");
                });

            modelBuilder.Entity("PersonalPortfolio.Shared.Storage.SymbolRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("SourceSymbolId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TargetSymbolId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("SourceSymbolId");

                    b.HasIndex("TargetSymbolId");

                    b.ToTable("Rates");
                });

            modelBuilder.Entity("PersonalPortfolio.Shared.Storage.SymbolRate", b =>
                {
                    b.HasOne("PersonalPortfolio.Shared.Storage.Security", "SourceSymbol")
                        .WithMany()
                        .HasForeignKey("SourceSymbolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonalPortfolio.Shared.Storage.Security", "TargetSymbol")
                        .WithMany()
                        .HasForeignKey("TargetSymbolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
